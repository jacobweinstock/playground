@startuml Tinkerbell
!define C4PUML_URL  https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master

!include C4PUML_URL/C4_Context.puml
!include C4PUML_URL/C4_Container.puml

!define SPRITES_URL https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.0/sprites
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
' see images possibilities here: https://github.com/tupadr3/plantuml-icon-font-sprites/blob/e53fd61259c0f2449edfe304cad83f51d0fbb5c1/font-awesome-5/index.md

!include FONTAWESOME/users.puml
!include SPRITES_URL/kubernetes.puml

title Level 1: System Context diagram\nTinkerbell Provisioning Engine

Person(capt, "CAPT", "Cluster API Tinkerbell orchestrates the provisioning of machines", $sprite="users")
System(tinkerbell, "Tinkerbell", "Carries out provisioning of machines")
System_Ext(machine, "Physical Machine", "")
System_Ext(fileServer, "File Server")
System_Ext(containerRegistry, "Container Registry", "")

Rel_Down(capt, tinkerbell, "Read from and write to", "HTTPS")
Rel_Down(tinkerbell, machine, "Sets power states and boot device using", "ipmi/redfish")
Rel_Up(machine, tinkerbell, "Reads provisioning manifest from, writes provisioning status to", "gRPC")
Rel_Up(machine, tinkerbell, "reads metadata from", "http")
BiRel_Up(machine, tinkerbell, "DHCP message exchange and read iPXE binary and script from", "udp")

Rel_Down(machine, fileServer, "Gets Hook kernel/initramfs and raw OS image from", "HTTPS")
Rel_Down(machine, containerRegistry, "Read workflow action images from", "HTTPS")

SHOW_LEGEND()

@enduml