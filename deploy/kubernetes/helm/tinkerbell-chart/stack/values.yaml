namespace: tink-system
createNamespace: true

# service for the stack
service:
  enabled: true
  name: tink-stack
  selector:
    lbtype: external
  udp:
    selector:
      lbUDP: external
  tcp:
    selector:
      lbTPC: external
  boots:
    ip: 192.168.2.111
  hegel:
    ip: 192.168.2.112
  tinkServer:
    ip: 192.168.2.113
  ip: 192.168.2.111
  lbClass: kube-vip.io/kube-vip-class

kubevip:
  enabled: true
  name: kube-vip
  image: ghcr.io/kube-vip/kube-vip:v0.5.0
  imagePullPolicy: IfNotPresent
  roleName: kube-vip-role
  roleBindingName: kube-vip-rolebinding
  interface: enp0s8

tink:
  namespace: tink-system
  tinkServer:
    selector:
      lbTCP: external
      lbtype: external

boots:
  namespace: tink-system
  boots:
    env:
    - name: DATA_MODEL_VERSION
      value: "kubernetes"
    - name: FACILITY_CODE
      value: "lab1"
    - name: HTTP_BIND
      value: ":80"
    - name: MIRROR_BASE_URL
      value: http://192.168.2.150:8080
    - name: PUBLIC_IP
      value: 192.168.2.111
    - name: PUBLIC_SYSLOG_FQDN
      value: 192.168.2.111
    - name: SYSLOG_BIND
      value: :514
    - name: TINKERBELL_GRPC_AUTHORITY
      value: 192.168.2.113:42113
    - name: TINKERBELL_TLS
      value: "false"
    - name: BOOTS_LOG_LEVEL
      value: "debug"
    - name: BOOTS_EXTRA_KERNEL_ARGS
      value: "tink_worker_image=quay.io/tinkerbell/tink-worker:latest"
    hostNetwork: false
    selector:
      lbUDP: external
      lbTCP: external
      lbtype: external


hegel:
  namespace: tink-system
  hegel:
    selector:
      lbTCP: external
      lbtype: external

rufio:
  namespace: tink-system

